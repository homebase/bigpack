#!/usr/bin/php
<?php

/**
 *
 * BigPack CLI Tool
 *
 */

namespace hb\bigpack {

    include __DIR__ . "/BigPack.php";  // all bigpack related code
    include __DIR__ . "/Util.php";     // \hb\util - generic classes - not bigpack related

    use hb\util\Util;

    /**
     * CLI Definition Interface:
     *    function-name = Cli Tool Command Name
     *    class php-doc = Cli Tool Global doc
     *    function php-doc = method doc, first line = method description for global doc
     */

    /**
     * * File Compressor with Deduplication.
     * * Blazing Fast Static Web Server.
     * * Petabyte Scale.
     * * Serve Millions Files from several Indexed Archive File(s)
     *
     * run: "bigpack help $command" to see doc for specific commands
     *
     * read doc: https://github.com/homebase/bigpack/blob/master/README.md
     */
    class Cli extends \hb\util\CliTool
    {


        /**
         * CREATE new archive
         * pack all files in directory and subdirectories
         * Options:
         *   --rm       - remove files after add
         *   --dir      - directory to take files from (default current directory)
         *   --gzip=0   - turn off gzip compression (default: gzip on)
         *   --skip-gzip="ext1 ext2" - skip gzip compression for files with extensions. default list in: Packer::$skip_gzip_default
         *   --recreate  - recreate existing BigPack files. CAUTION: you'll lose previosly archived files!
         *   --skip-files - comma delimited list of files to ignore (in every directory)
         *   --bare       - create empty archive - just write a header
         */
        static function init(array $opts)
        {
            if ((new Packer($opts))->init()) // if files-added
            (new Indexer($opts))->index();
        }

        /**
         * add NEW files to existing archive
         * Options:
         *   --rm       - remove files after add
         *   --dir      - directory to take files from (default current directory)
         *   --gzip=0   - turn off gzip compression (default: gzip on)
         *   --skip-gzip="ext1 ext2" - skip gzip compression for files with extensions. default list in: Packer::$skip_gzip_default
         *   --skip-files - comma delimited list of files to ignore (in every directory)
         */
        static function add(array $opts)
        {
            if ((new Packer($opts))->add())  // if files-added
            (new Indexer($opts))->index();
        }

        /**
         * update known CHANGED files in existing archive
         * old file content is still kept in archive
         * Options:
         *   --rm       - remove files after add
         *   --dir      - directory to take files from (default current directory)
         *   --gzip=0   - turn off gzip compression (default: gzip on)
         *   --skip-gzip="ext1 ext2" - skip gzip compression for files with extensions. default list in: Packer::$skip_gzip_default
         *   --skip-files - comma delimited list of files to ignore (in every directory)
         *
         */
        static function update(array $opts)
        {
            if ((new Packer($opts))->updateChanged())  // if files-added
            (new Indexer($opts))->index();
        }


        /**
         * LIST files in archive
         *
         * default timezone from php.ini is used to show dates
         * hint: use "bigpack list | column -t" for better layout
         *
         * bigpack list
         * bigpack list "comma-delimited-list-of-patterns" <<  "*dir/*.jpg,dir2/[abc]*.gif" see http://php.net/manual/en/function.fnmatch.php
         *
         * Options:
         *   --pattern-exclude  - comma delimited list of fnmatch patterns (applied AFTER pattern)
         *   --name-only - show only file names
         *   --raw       - show raw data
         */
        static function list(array $opts)
        {
            (new Extractor($opts))->list();
        }

        /**
         * EXTRACT all or specific files from archive
         *
         * Usage:
         *    bigpack extract file1 file2 file3 ...
         *    bigpack extract --all
         *    bigpack extract --pattern="dir1/*.gif,dir2/aa*bb/a?.png"                   << comma delimited list of patterns
         *    bigpack extract --pattern-exclude="dir1/*.gif,dir2/aa*bb/a?.png"           << comma delimited list of patterns
         *    bigpack extract --pattern="dir1/*,dir2/*" --pattern-exclude="*.bak,*.tmp"
         *
         * Options:
         *   --all      - extract all files
         *   --pattern          - comma delimited list of fnmatch patterns
         *   --pattern-exclude  - comma delimited list of fnmatch patterns (applied AFTER pattern)
         *   --data-hash     - extract ONE file with specific data-hash (e.g. specific version of file)
         *                     run "bigpack list" to see all files aand data-hashes
         *   --cat      - dump file to STDOUT
         */
        static function extract(array $opts)
        {
            (new Extractor($opts))->extract();
        }

        /**
         * DEBUG: extract files from archive.
         * Lookups done via "MAP" file
         */
        static function _extractMap(array $opts)
        {
            (new ExtractorMap($opts))->extract();
        }

        /**
         * Fast extract files from archive. Same algorithm as "bigpack server"
         * Lookups done via "MAP2, MAP" files. Index file is NOT used.
         * Will NOT restore last-modified-date & file permissions
         */
        static function extractMap2(array $opts)
        {
            (new ExtractorMap2($opts))->extract();
        }

        /**
         * remove already archived files from filesystem (will not remove directories)
         * will not remove modified files (file-last-modified changed)
         * delete empty directories using "rmdir $(find . -type d -empty)"
         */
        static function removeArchived(array $opts)
        {
            (new Packer($opts))->removeArchived();
        }


        /**
         * Build Indexes: "map", "map2" files - called automatically after "init, add, update"
         * - "map" (index of index)                  - list of [filehash => offset] (full list)
         * - "map2" (index of map(index of index))   - list of [filehash => offset] (one record for 512 "map" entries)
         */
        static function index(array $opts)
        {
            (new Indexer($opts))->index();
        }

        /**
         * mark content as "deleted"
         * all files mapped to this content will become unavailable
         * web service will return "410 GONE" for this files
         *
         * bigpack deleteContent file1 file2 ...
         *
         * Option:
         *  --undelete  : restore content
         */
        static function deleteContent(array $opts)
        {
            (new Packer($opts))->deleteContent();
        }

        /**
         * generate index.html with links to all files stored in bigpack
         *
         * to generate JPG image index / display pages do:
         *    bigpack list --name-only "*.jpg" | perl -ne 'chomp; print "<h2>$.: $_</h2><img src=\\"$_\\"><br>\n"' > image-list.html
         *    split image-list.html "image-list-" --additional-suffix=".html"  --numeric-suffixes=1 -l 100 -a 3
         *    ls image-list-* | perl -ne 'chomp; print "$. <a href=\\"$_\\">$_</a><br>\n"' > image-list.html
         *    bigpack add
         *
         * @todo : Create good index with pagination (directories, statistics)
         */
        static function generateIndex(array $opts)
        {
            $cmd = __DIR__ . '/bigpack list --name-only | perl -ne \'chomp; print "$. <a href=\\"$_\\">$_</a><br>\n"\'';
        // echo $cmd;
            shell_exec("$cmd > index.html");
        }

        /**
         * advanced users: Generate File List from current directory for addFromFileList command
         *
         * Filelist is gzip of `find . -printf "%p\t%m\t%T@\n" | sed 's/^\.\///'` command
         * e.g. tab delimited list of "FileName FileMod LastModifiedUnixTime"
         * Example: "somedir/README.md\t664\t1543616888" where "\t" is tab character
         *
         * ".*" files/directories ignored (hidden files). ex: ".git" directory ignored
         * "*.gz" files ignored
         *
         * On terabyte+ filesystems generation process alone can take hours (even on SSD)
         *
         * Advanced Usage (Data-Source-FileName):
         *    you can specify Data-Source-FileName for a File (relative or absolute filename)
         *    tab delimited list of "FileName FileMod LastModifiedUnixTime DataSourceFileName"
         *
         */
        static function generateFileList()
        {
            $cmd = "find . -path \"./.*\" -prune -o -path \"*.gz\" -prune -o -path \"*/.*\" -prune -o -type f -printf \"%p\t%m\t%T@\n\"";
            echo shell_exec($cmd . ' | sed \'s/^\.\///\' | sed \'s/\.[0-9]*$//\' | gzip > filelist.bigpack.gz');
        }

        /**
         * advanced users: create archive / add files from specially filelist generated by generateFileList
         *
         * @see bigpack help generateFileList
         */
        static function addFromFileList(array $opts)
        {
            if ((new Packer($opts))->addFromFileList($opts)) // if files-added
            (new Indexer($opts))->index();
        }


        /**
         * merge ALL files from external bigpack archive into current archive
         * 
         * Required Option:
         *  --archive-dir="..."      : second archive directory
         * 
         * Same as "bigpack addFromArchive --archive-dir="..." --pattern="*"
         * see "bigpack help addFromArchive" for details
         */
        static function merge(array $opts)
        {
            $opts["pattern"] = "*";
            return self::addFromArchive($opts);
        }

        /**
         * split bigpack. create new archive as a subset of existing archive
         * 
         * use "addFromArchive" method
         * see "bigpack help addFromArchive" section 'Extract files from bigpack to another bigpack'
         */
        static function split(array $opts)
        {
            self::help([2 => "split"]);
        }

        /**
         * replace files in bigpack archive
         * 
         * use "addFromArchive" method
         * see "bigpack help addFromArchive" section 'Replace files in Archive'
         */
        static function replaceFiles(array $opts)
        {
            self::help([2 => "replaceFiles"]);
        }

        /**
         * remove files from bigpack archive
         * 
         * use "addFromArchive" method
         * see "bigpack help addFromArchive" section 'Remove files from Archive'
         */
        static function removeFiles(array $opts)
        {
            self::help([2 => "removeFiles"]);
        }

        /**
         * - Add all/specific files from external bigpack archive into current archive
         * - Extract specific files from archive
         * - Replace files in Archive (by generating new one)
         * - Remove files from Archive (by generating new one)
         * 
         * Required Option:
         *  --archive-dir="..."
         * 
         * Options:
         *   --pattern          - comma delimited list of fnmatch patterns
         *   --pattern-exclude  - comma delimited list of fnmatch patterns (applied AFTER pattern)
         *   --all              - add all files
         *
         * Examples:
         *    
         *   Add files from external bigpack:
         *     cd my-archive
         *     bigpack addFromArchive --archive-dir=path-to-second-archive --all
         *     bigpack addFromArchive --archive-dir=path-to-second-archive --pattern="*.jpg,*.jpeg,*.png,*.html" --pattern-exclude="exclude-dir/*"
         *   
         *   Extract files from bigpack to another bigpack:
         *     cd my-archive
         *     mkdir new-archive
         *     cd new-archive
         *     bigpack init --bare
         *     bigpack addFromArchive --archive-dir=.. --pattern="*.jpg,*.jpeg,*.png,*.html" --pattern-exclude="exclude-dir/*"
         *   
         *   Replace files in Archive:
         *     cd dir-with-new-files
         *     bigpack init
         *     bigpack addFromArchive --archive-dir=originalBigPack --all
         *     # new archive have only new version of files
         *   
         *   Remove files from Archive:
         *     mkdir new-dir
         *     cd new-dir
         *     bigpack init
         *     bigpack addFromArchive --archive-dir=originalBigPack --pattern-exclude="path/filename1,path/filename2,pattern"
         * 
         */
        static function addFromArchive(array $opts)
        {
            if (!@$opts['archive-dir'])
                return self::help(['2' => 'addFromArchive']);
            if ((new Packer($opts))->addFromArchive($opts)) // if files-added
            (new Indexer($opts))->index();
        }


        /**
         * sync BigPack files to remote server/directory
         *
         * rsync/ssh wrapper
         * remote bigpack-web-server will reload-indexes - no requests will be lost
         *
         * Usage:
         *   bigpack sync server:path
         *
         * PS:
         *   // technically bigpack-web-server does not need an INDEX file
         *   // it needs only data, map and map2 files
         *   // however we need it for "extract --all" operation
         *   // feel free to delete it if you want to keep filenames stored in bigpack secret
         */
        static function sync(array $opts)
        {
            $remote = @$opts[2];
            if (!$remote || !strpos($remote, ':'))
                Util::error("Specify Remote Server:Path\nsee bigpack help sync\n");
            $files = [Core::DATA, Core::INDEX, Core::MAP2, Core::MAP];
            foreach ($files as $f) {
                if (!file_exists($f))
                    Util::error("No file $f in current directory"); // & die
            }
            foreach ($files as $f) {
                echo shell_exec("rsync -av $f $remote");
            }
        }

        /**
         * run bigpack server (using php buildin web server)
         *
         * CLI OPTIONS:
         *   --port = port to run - default is 8080
         *   --host = host ro run - default is localhost
         *
         * Optional Config File "BigPack.options": (key-value format)
         *   host=hostname                 << DEFAULT localhost
         *   port=port                     << DEFAULT 8080
         *   mime-types=/etc/mime.types    << DEFAULT (use same format)
         *   expires-minutes=50            << DEFAULT 0  - Expires tag
         *
         */
        static function server(array $opts)
        {
            if (!function_exists("apcu_fetch"))
                Util::error("install PHP-APCU - http://php.net/manual/en/intro.apcu.php");
            if (file_exists(Core::OPTIONS))
                $opts += parse_ini_file(Core::OPTIONS);
            $port = $opts['port'] ?? 8080;
            $host = $opts['host'] ?? "localhost";
            $server = __DIR__ . "/bigpack-server";
            echo "Starting bigpack php-web server. http://$host:$port\n";
            shell_exec("php -S $host:$port $server");
        }

        /**
         * version info and more
         */
        static function about(array $opts)
        {
            $P = new Packer($opts);
            $skip_gzip = array_keys($P->skip_gzip);
            sort($skip_gzip);
            echo "Version: " . Core::VERSION . "\n";
            echo "Gzip: " . ($P->opts['gzip'] ? "on" : "off") . "\n";
            echo "Skip GZIP extensions: " . json_encode($skip_gzip) . "\n";
        }


    } // Class CLI

} // namespace

namespace {
    declare (ticks = 1);
    ini_set("memory_limit", -1);
    pcntl_signal(SIGTERM, ['\hb\bigpack\Core', '_SIGTERM']);
    pcntl_signal(SIGINT, ['\hb\bigpack\Core', '_SIGINT']);
    pcntl_signal(SIGHUP, ['\hb\bigpack\Core', '_SIGHUP']);

    hb\bigpack\Cli::_run($argv);
}
